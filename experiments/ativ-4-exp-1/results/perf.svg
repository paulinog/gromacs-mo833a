<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>rebalanceSimpleLists (301 samples, 0.04%)</title><rect x="859.4" y="229" width="0.6" height="15.0" fill="rgb(252,129,15)" rx="2" ry="2" />
<text  x="862.43" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (110 samples, 0.02%)</title><rect x="772.3" y="181" width="0.2" height="15.0" fill="rgb(214,185,28)" rx="2" ry="2" />
<text  x="775.32" y="191.5" ></text>
</g>
<g >
<title>__common_interrupt (114 samples, 0.02%)</title><rect x="768.3" y="165" width="0.2" height="15.0" fill="rgb(209,99,42)" rx="2" ry="2" />
<text  x="771.33" y="175.5" ></text>
</g>
<g >
<title>clearForceBuffer (2,947 samples, 0.44%)</title><rect x="892.1" y="261" width="5.2" height="15.0" fill="rgb(214,214,26)" rx="2" ry="2" />
<text  x="895.11" y="271.5" ></text>
</g>
<g >
<title>PairlistSets::construct (74 samples, 0.01%)</title><rect x="34.9" y="245" width="0.1" height="15.0" fill="rgb(254,78,41)" rx="2" ry="2" />
<text  x="37.86" y="255.5" ></text>
</g>
<g >
<title>gmx::settle_proj (1,302 samples, 0.19%)</title><rect x="897.6" y="261" width="2.3" height="15.0" fill="rgb(254,91,3)" rx="2" ry="2" />
<text  x="900.62" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (886 samples, 0.13%)</title><rect x="775.1" y="213" width="1.6" height="15.0" fill="rgb(246,94,46)" rx="2" ry="2" />
<text  x="778.15" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (85 samples, 0.01%)</title><rect x="775.5" y="133" width="0.2" height="15.0" fill="rgb(232,187,11)" rx="2" ry="2" />
<text  x="778.51" y="143.5" ></text>
</g>
<g >
<title>Nbnxm::GridSet::putOnGrid (555 samples, 0.08%)</title><rect x="33.7" y="245" width="1.0" height="15.0" fill="rgb(248,20,34)" rx="2" ry="2" />
<text  x="36.70" y="255.5" ></text>
</g>
<g >
<title>nbnxn_kernel_cpu (159,576 samples, 23.68%)</title><rect x="899.9" y="261" width="279.5" height="15.0" fill="rgb(214,152,46)" rx="2" ry="2" />
<text  x="902.94" y="271.5" >nbnxn_kernel_cpu</text>
</g>
<g >
<title>try_to_wake_up (150 samples, 0.02%)</title><rect x="770.0" y="101" width="0.3" height="15.0" fill="rgb(217,146,43)" rx="2" ry="2" />
<text  x="773.02" y="111.5" ></text>
</g>
<g >
<title>gen8_irq_handler (76 samples, 0.01%)</title><rect x="768.4" y="101" width="0.1" height="15.0" fill="rgb(237,146,8)" rx="2" ry="2" />
<text  x="771.35" y="111.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (83 samples, 0.01%)</title><rect x="768.5" y="165" width="0.2" height="15.0" fill="rgb(236,12,41)" rx="2" ry="2" />
<text  x="771.53" y="175.5" ></text>
</g>
<g >
<title>update_load_avg (78 samples, 0.01%)</title><rect x="776.3" y="69" width="0.2" height="15.0" fill="rgb(218,145,11)" rx="2" ry="2" />
<text  x="779.33" y="79.5" ></text>
</g>
<g >
<title>common_interrupt (199 samples, 0.03%)</title><rect x="768.3" y="181" width="0.4" height="15.0" fill="rgb(227,104,16)" rx="2" ry="2" />
<text  x="771.33" y="191.5" ></text>
</g>
<g >
<title>[gmx] (859 samples, 0.13%)</title><rect x="865.3" y="229" width="1.5" height="15.0" fill="rgb(227,6,24)" rx="2" ry="2" />
<text  x="868.34" y="239.5" ></text>
</g>
<g >
<title>task_tick_fair (216 samples, 0.03%)</title><rect x="776.1" y="85" width="0.4" height="15.0" fill="rgb(218,129,6)" rx="2" ry="2" />
<text  x="779.09" y="95.5" ></text>
</g>
<g >
<title>nbnxm_kernel_ElecRF_VdwLJCombGeom_VF_4xm (159,561 samples, 23.68%)</title><rect x="900.0" y="245" width="279.4" height="15.0" fill="rgb(223,33,45)" rx="2" ry="2" />
<text  x="902.97" y="255.5" >nbnxm_kernel_ElecRF_VdwLJCombGeom_VF_..</text>
</g>
<g >
<title>perf_event_task_tick (126 samples, 0.02%)</title><rect x="770.8" y="53" width="0.2" height="15.0" fill="rgb(220,113,1)" rx="2" ry="2" />
<text  x="773.78" y="63.5" ></text>
</g>
<g >
<title>new_sync_write (77 samples, 0.01%)</title><rect x="860.2" y="165" width="0.1" height="15.0" fill="rgb(223,7,19)" rx="2" ry="2" />
<text  x="863.20" y="175.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (107 samples, 0.02%)</title><rect x="775.2" y="181" width="0.2" height="15.0" fill="rgb(254,167,49)" rx="2" ry="2" />
<text  x="778.16" y="191.5" ></text>
</g>
<g >
<title>__schedule (114 samples, 0.02%)</title><rect x="776.8" y="165" width="0.2" height="15.0" fill="rgb(251,189,32)" rx="2" ry="2" />
<text  x="779.76" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (154 samples, 0.02%)</title><rect x="853.3" y="117" width="0.3" height="15.0" fill="rgb(211,123,13)" rx="2" ry="2" />
<text  x="856.32" y="127.5" ></text>
</g>
<g >
<title>rcu_core (74 samples, 0.01%)</title><rect x="769.3" y="133" width="0.2" height="15.0" fill="rgb(208,157,36)" rx="2" ry="2" />
<text  x="772.32" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (86 samples, 0.01%)</title><rect x="853.4" y="85" width="0.2" height="15.0" fill="rgb(217,70,53)" rx="2" ry="2" />
<text  x="856.44" y="95.5" ></text>
</g>
<g >
<title>GOMP_parallel (40,593 samples, 6.02%)</title><rect x="787.5" y="229" width="71.1" height="15.0" fill="rgb(243,50,9)" rx="2" ry="2" />
<text  x="790.52" y="239.5" >GOMP_par..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (82 samples, 0.01%)</title><rect x="775.0" y="213" width="0.1" height="15.0" fill="rgb(252,131,11)" rx="2" ry="2" />
<text  x="778.00" y="223.5" ></text>
</g>
<g >
<title>enqueue_task_fair (61 samples, 0.01%)</title><rect x="770.1" y="53" width="0.1" height="15.0" fill="rgb(223,67,23)" rx="2" ry="2" />
<text  x="773.09" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (94 samples, 0.01%)</title><rect x="853.4" y="101" width="0.2" height="15.0" fill="rgb(242,44,16)" rx="2" ry="2" />
<text  x="856.42" y="111.5" ></text>
</g>
<g >
<title>pick_next_task_fair (79 samples, 0.01%)</title><rect x="769.0" y="117" width="0.1" height="15.0" fill="rgb(250,113,8)" rx="2" ry="2" />
<text  x="771.99" y="127.5" ></text>
</g>
<g >
<title>enqueue_task (97 samples, 0.01%)</title><rect x="770.1" y="69" width="0.2" height="15.0" fill="rgb(210,228,4)" rx="2" ry="2" />
<text  x="773.08" y="79.5" ></text>
</g>
<g >
<title>Nbnxm::Grid::fillCell (146 samples, 0.02%)</title><rect x="33.4" y="245" width="0.3" height="15.0" fill="rgb(228,125,15)" rx="2" ry="2" />
<text  x="36.43" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (640 samples, 0.09%)</title><rect x="1178.0" y="197" width="1.1" height="15.0" fill="rgb(250,71,2)" rx="2" ry="2" />
<text  x="1181.02" y="207.5" ></text>
</g>
<g >
<title>gmx::settleTemplate&lt;gmx::SimdFloat, gmx::SimdFBool, 8, float const*, false, false&gt; (1,452 samples, 0.22%)</title><rect x="782.7" y="197" width="2.6" height="15.0" fill="rgb(234,224,1)" rx="2" ry="2" />
<text  x="785.74" y="207.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (85 samples, 0.01%)</title><rect x="768.3" y="117" width="0.2" height="15.0" fill="rgb(238,92,45)" rx="2" ry="2" />
<text  x="771.35" y="127.5" ></text>
</g>
<g >
<title>pbc_dx_aiuc (1,292 samples, 0.19%)</title><rect x="874.4" y="245" width="2.2" height="15.0" fill="rgb(211,179,43)" rx="2" ry="2" />
<text  x="877.39" y="255.5" ></text>
</g>
<g >
<title>copy_rvec_to_nbat_real (59 samples, 0.01%)</title><rect x="897.3" y="261" width="0.1" height="15.0" fill="rgb(213,91,25)" rx="2" ry="2" />
<text  x="900.28" y="271.5" ></text>
</g>
<g >
<title>__schedule (103 samples, 0.02%)</title><rect x="772.3" y="133" width="0.2" height="15.0" fill="rgb(242,56,18)" rx="2" ry="2" />
<text  x="775.33" y="143.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (185 samples, 0.03%)</title><rect x="768.9" y="165" width="0.3" height="15.0" fill="rgb(237,167,35)" rx="2" ry="2" />
<text  x="771.89" y="175.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (150 samples, 0.02%)</title><rect x="770.0" y="117" width="0.3" height="15.0" fill="rgb(211,180,46)" rx="2" ry="2" />
<text  x="773.02" y="127.5" ></text>
</g>
<g >
<title>[unknown] (453 samples, 0.07%)</title><rect x="858.6" y="229" width="0.8" height="15.0" fill="rgb(221,39,41)" rx="2" ry="2" />
<text  x="861.62" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (326 samples, 0.05%)</title><rect x="775.9" y="101" width="0.6" height="15.0" fill="rgb(229,43,47)" rx="2" ry="2" />
<text  x="778.92" y="111.5" ></text>
</g>
<g >
<title>asm_common_interrupt (93 samples, 0.01%)</title><rect x="774.7" y="229" width="0.2" height="15.0" fill="rgb(219,117,35)" rx="2" ry="2" />
<text  x="777.73" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (265 samples, 0.04%)</title><rect x="853.2" y="181" width="0.4" height="15.0" fill="rgb(253,33,31)" rx="2" ry="2" />
<text  x="856.18" y="191.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (429,751 samples, 63.77%)</title><rect x="35.0" y="245" width="752.5" height="15.0" fill="rgb(231,11,42)" rx="2" ry="2" />
<text  x="37.99" y="255.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>PairlistSet::constructPairlists (70 samples, 0.01%)</title><rect x="34.9" y="229" width="0.1" height="15.0" fill="rgb(231,30,40)" rx="2" ry="2" />
<text  x="37.87" y="239.5" ></text>
</g>
<g >
<title>clockevents_program_event (91 samples, 0.01%)</title><rect x="771.9" y="133" width="0.1" height="15.0" fill="rgb(210,217,54)" rx="2" ry="2" />
<text  x="774.86" y="143.5" ></text>
</g>
<g >
<title>gmx::settleTemplate&lt;gmx::SimdFloat, gmx::SimdFBool, 8, float const*, false, false&gt; (212 samples, 0.03%)</title><rect x="857.9" y="181" width="0.4" height="15.0" fill="rgb(246,126,16)" rx="2" ry="2" />
<text  x="860.92" y="191.5" ></text>
</g>
<g >
<title>pbc_dx_aiuc (4,495 samples, 0.67%)</title><rect x="1179.4" y="261" width="7.8" height="15.0" fill="rgb(223,220,46)" rx="2" ry="2" />
<text  x="1182.38" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (192 samples, 0.03%)</title><rect x="768.9" y="181" width="0.3" height="15.0" fill="rgb(210,152,34)" rx="2" ry="2" />
<text  x="771.87" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (478 samples, 0.07%)</title><rect x="775.7" y="149" width="0.8" height="15.0" fill="rgb(229,91,54)" rx="2" ry="2" />
<text  x="778.66" y="159.5" ></text>
</g>
<g >
<title>pbc_dx_aiuc@plt (260 samples, 0.04%)</title><rect x="1187.2" y="261" width="0.5" height="15.0" fill="rgb(229,165,26)" rx="2" ry="2" />
<text  x="1190.25" y="271.5" ></text>
</g>
<g >
<title>account_user_time (58 samples, 0.01%)</title><rect x="770.4" y="69" width="0.1" height="15.0" fill="rgb(225,186,2)" rx="2" ry="2" />
<text  x="773.44" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle (414 samples, 0.06%)</title><rect x="1178.3" y="133" width="0.7" height="15.0" fill="rgb(249,187,25)" rx="2" ry="2" />
<text  x="1181.26" y="143.5" ></text>
</g>
<g >
<title>[unknown] (41,425 samples, 6.15%)</title><rect x="787.5" y="245" width="72.6" height="15.0" fill="rgb(234,189,3)" rx="2" ry="2" />
<text  x="790.52" y="255.5" >[unknown]</text>
</g>
<g >
<title>__schedule (58 samples, 0.01%)</title><rect x="1179.2" y="165" width="0.1" height="15.0" fill="rgb(236,123,6)" rx="2" ry="2" />
<text  x="1182.23" y="175.5" ></text>
</g>
<g >
<title>gmx (673,861 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(244,144,17)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >gmx</text>
</g>
<g >
<title>asm_common_interrupt (223 samples, 0.03%)</title><rect x="768.3" y="197" width="0.4" height="15.0" fill="rgb(220,12,8)" rx="2" ry="2" />
<text  x="771.33" y="207.5" ></text>
</g>
<g >
<title>copy_rvec_to_nbat_real (1,127 samples, 0.17%)</title><rect x="22.1" y="245" width="1.9" height="15.0" fill="rgb(242,184,19)" rx="2" ry="2" />
<text  x="25.06" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (534 samples, 0.08%)</title><rect x="1178.1" y="165" width="0.9" height="15.0" fill="rgb(221,156,27)" rx="2" ry="2" />
<text  x="1181.07" y="175.5" ></text>
</g>
<g >
<title>calc_x_times_f (1,340 samples, 0.20%)</title><rect x="889.7" y="245" width="2.4" height="15.0" fill="rgb(214,134,42)" rx="2" ry="2" />
<text  x="892.74" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,988 samples, 0.30%)</title><rect x="768.7" y="197" width="3.5" height="15.0" fill="rgb(234,38,34)" rx="2" ry="2" />
<text  x="771.75" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (222 samples, 0.03%)</title><rect x="853.3" y="165" width="0.3" height="15.0" fill="rgb(230,179,17)" rx="2" ry="2" />
<text  x="856.26" y="175.5" ></text>
</g>
<g >
<title>Nbnxm::Grid::fillCell (5,538 samples, 0.82%)</title><rect x="14.3" y="261" width="9.7" height="15.0" fill="rgb(249,178,13)" rx="2" ry="2" />
<text  x="17.34" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (869 samples, 0.13%)</title><rect x="1177.6" y="229" width="1.6" height="15.0" fill="rgb(225,114,21)" rx="2" ry="2" />
<text  x="1180.65" y="239.5" ></text>
</g>
<g >
<title>reduceForces (1,229 samples, 0.18%)</title><rect x="1187.7" y="261" width="2.2" height="15.0" fill="rgb(229,14,22)" rx="2" ry="2" />
<text  x="1190.72" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (180 samples, 0.03%)</title><rect x="853.3" y="149" width="0.3" height="15.0" fill="rgb(209,178,49)" rx="2" ry="2" />
<text  x="856.31" y="159.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (85 samples, 0.01%)</title><rect x="775.5" y="149" width="0.2" height="15.0" fill="rgb(248,162,21)" rx="2" ry="2" />
<text  x="778.51" y="159.5" ></text>
</g>
<g >
<title>gmx::(anonymous namespace)::CMainCommandLineModule::~CMainCommandLineModule (859 samples, 0.13%)</title><rect x="865.3" y="245" width="1.5" height="15.0" fill="rgb(250,176,47)" rx="2" ry="2" />
<text  x="868.34" y="255.5" ></text>
</g>
<g >
<title>asm_common_interrupt (126 samples, 0.02%)</title><rect x="1177.4" y="229" width="0.2" height="15.0" fill="rgb(239,171,42)" rx="2" ry="2" />
<text  x="1180.43" y="239.5" ></text>
</g>
<g >
<title>calcBondedForces (1,388 samples, 0.21%)</title><rect x="777.0" y="229" width="2.4" height="15.0" fill="rgb(242,209,44)" rx="2" ry="2" />
<text  x="779.96" y="239.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (133 samples, 0.02%)</title><rect x="1177.8" y="197" width="0.2" height="15.0" fill="rgb(253,216,37)" rx="2" ry="2" />
<text  x="1180.79" y="207.5" ></text>
</g>
<g >
<title>gmx::settle_proj (4,276 samples, 0.63%)</title><rect x="866.9" y="245" width="7.5" height="15.0" fill="rgb(216,27,15)" rx="2" ry="2" />
<text  x="869.87" y="255.5" ></text>
</g>
<g >
<title>do_em_step (1,049 samples, 0.16%)</title><rect x="780.8" y="229" width="1.8" height="15.0" fill="rgb(217,104,1)" rx="2" ry="2" />
<text  x="783.77" y="239.5" ></text>
</g>
<g >
<title>__schedule (63 samples, 0.01%)</title><rect x="775.0" y="165" width="0.1" height="15.0" fill="rgb(244,16,14)" rx="2" ry="2" />
<text  x="778.03" y="175.5" ></text>
</g>
<g >
<title>Nbnxm::Grid::sortColumnsCpuGeometry (497 samples, 0.07%)</title><rect x="24.1" y="261" width="0.9" height="15.0" fill="rgb(252,152,7)" rx="2" ry="2" />
<text  x="27.09" y="271.5" ></text>
</g>
<g >
<title>nbnxn_atomdata_add_nbat_f_to_f_stdreduce (1,238 samples, 0.18%)</title><rect x="785.3" y="229" width="2.2" height="15.0" fill="rgb(250,69,13)" rx="2" ry="2" />
<text  x="788.33" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (320 samples, 0.05%)</title><rect x="1178.4" y="101" width="0.6" height="15.0" fill="rgb(225,104,12)" rx="2" ry="2" />
<text  x="1181.42" y="111.5" ></text>
</g>
<g >
<title>clear_rvecs_omp (76 samples, 0.01%)</title><rect x="857.8" y="213" width="0.1" height="15.0" fill="rgb(215,95,3)" rx="2" ry="2" />
<text  x="860.78" y="223.5" ></text>
</g>
<g >
<title>nbnxn_make_pairlist_part&lt;NbnxnPairlistCpu&gt; (37,790 samples, 5.61%)</title><rect x="787.5" y="197" width="66.2" height="15.0" fill="rgb(221,148,41)" rx="2" ry="2" />
<text  x="790.53" y="207.5" >nbnxn_m..</text>
</g>
<g >
<title>update_load_avg (140 samples, 0.02%)</title><rect x="771.5" y="37" width="0.2" height="15.0" fill="rgb(225,83,53)" rx="2" ry="2" />
<text  x="774.48" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (212 samples, 0.03%)</title><rect x="769.2" y="149" width="0.4" height="15.0" fill="rgb(235,184,28)" rx="2" ry="2" />
<text  x="772.24" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (61 samples, 0.01%)</title><rect x="1179.2" y="197" width="0.1" height="15.0" fill="rgb(211,153,43)" rx="2" ry="2" />
<text  x="1182.22" y="207.5" ></text>
</g>
<g >
<title>__sincosf_fma (386 samples, 0.06%)</title><rect x="889.0" y="261" width="0.6" height="15.0" fill="rgb(210,216,0)" rx="2" ry="2" />
<text  x="891.95" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (102 samples, 0.02%)</title><rect x="1177.8" y="181" width="0.2" height="15.0" fill="rgb(253,44,25)" rx="2" ry="2" />
<text  x="1180.81" y="191.5" ></text>
</g>
<g >
<title>evaluate_single (90 samples, 0.01%)</title><rect x="857.6" y="197" width="0.1" height="15.0" fill="rgb(249,151,12)" rx="2" ry="2" />
<text  x="860.57" y="207.5" ></text>
</g>
<g >
<title>PairlistSet::constructPairlists (37,940 samples, 5.63%)</title><rect x="787.5" y="213" width="66.5" height="15.0" fill="rgb(207,92,7)" rx="2" ry="2" />
<text  x="790.53" y="223.5" >Pairlis..</text>
</g>
<g >
<title>do_pairs (504 samples, 0.07%)</title><rect x="777.1" y="213" width="0.9" height="15.0" fill="rgb(233,5,34)" rx="2" ry="2" />
<text  x="780.10" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (137 samples, 0.02%)</title><rect x="776.7" y="229" width="0.3" height="15.0" fill="rgb(214,180,3)" rx="2" ry="2" />
<text  x="779.72" y="239.5" ></text>
</g>
<g >
<title>clear_rvecs_omp (773 samples, 0.11%)</title><rect x="779.4" y="229" width="1.4" height="15.0" fill="rgb(254,162,10)" rx="2" ry="2" />
<text  x="782.42" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (125 samples, 0.02%)</title><rect x="776.7" y="197" width="0.3" height="15.0" fill="rgb(210,226,39)" rx="2" ry="2" />
<text  x="779.74" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (177 samples, 0.03%)</title><rect x="853.3" y="133" width="0.3" height="15.0" fill="rgb(211,146,0)" rx="2" ry="2" />
<text  x="856.31" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (435 samples, 0.06%)</title><rect x="775.7" y="133" width="0.8" height="15.0" fill="rgb(205,92,47)" rx="2" ry="2" />
<text  x="778.74" y="143.5" ></text>
</g>
<g >
<title>do_dih_fup&lt; (843 samples, 0.13%)</title><rect x="863.1" y="245" width="1.5" height="15.0" fill="rgb(224,22,47)" rx="2" ry="2" />
<text  x="866.11" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (61 samples, 0.01%)</title><rect x="1179.2" y="213" width="0.1" height="15.0" fill="rgb(242,159,32)" rx="2" ry="2" />
<text  x="1182.22" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,027 samples, 0.15%)</title><rect x="774.9" y="229" width="1.8" height="15.0" fill="rgb(213,162,40)" rx="2" ry="2" />
<text  x="777.90" y="239.5" ></text>
</g>
<g >
<title>lapic_next_deadline (64 samples, 0.01%)</title><rect x="771.9" y="117" width="0.1" height="15.0" fill="rgb(253,40,4)" rx="2" ry="2" />
<text  x="774.91" y="127.5" ></text>
</g>
<g >
<title>__schedule (154 samples, 0.02%)</title><rect x="768.9" y="133" width="0.3" height="15.0" fill="rgb(244,157,42)" rx="2" ry="2" />
<text  x="771.94" y="143.5" ></text>
</g>
<g >
<title>GOMP_parallel (420 samples, 0.06%)</title><rect x="858.6" y="213" width="0.8" height="15.0" fill="rgb(213,162,24)" rx="2" ry="2" />
<text  x="861.62" y="223.5" ></text>
</g>
<g >
<title>gmx::Constraints::Impl::apply (219 samples, 0.03%)</title><rect x="857.9" y="213" width="0.4" height="15.0" fill="rgb(224,76,37)" rx="2" ry="2" />
<text  x="860.91" y="223.5" ></text>
</g>
<g >
<title>gmx::csettle (214 samples, 0.03%)</title><rect x="857.9" y="197" width="0.4" height="15.0" fill="rgb(217,98,16)" rx="2" ry="2" />
<text  x="860.91" y="207.5" ></text>
</g>
<g >
<title>gmx::gmx_mdrun (859 samples, 0.13%)</title><rect x="865.3" y="197" width="1.5" height="15.0" fill="rgb(251,35,25)" rx="2" ry="2" />
<text  x="868.34" y="207.5" ></text>
</g>
<g >
<title>update_process_times (406 samples, 0.06%)</title><rect x="1178.3" y="117" width="0.7" height="15.0" fill="rgb(235,209,30)" rx="2" ry="2" />
<text  x="1181.28" y="127.5" ></text>
</g>
<g >
<title>vfprintf (199 samples, 0.03%)</title><rect x="888.4" y="245" width="0.4" height="15.0" fill="rgb(246,194,28)" rx="2" ry="2" />
<text  x="891.41" y="255.5" ></text>
</g>
<g >
<title>calc_vir (1,343 samples, 0.20%)</title><rect x="889.7" y="261" width="2.4" height="15.0" fill="rgb(237,220,9)" rx="2" ry="2" />
<text  x="892.73" y="271.5" ></text>
</g>
<g >
<title>task_tick_fair (194 samples, 0.03%)</title><rect x="1178.6" y="85" width="0.3" height="15.0" fill="rgb(212,18,0)" rx="2" ry="2" />
<text  x="1181.61" y="95.5" ></text>
</g>
<g >
<title>put_atoms_in_box (1,551 samples, 0.23%)</title><rect x="876.7" y="245" width="2.7" height="15.0" fill="rgb(216,160,52)" rx="2" ry="2" />
<text  x="879.67" y="255.5" ></text>
</g>
<g >
<title>common_interrupt (115 samples, 0.02%)</title><rect x="1177.4" y="213" width="0.2" height="15.0" fill="rgb(241,154,26)" rx="2" ry="2" />
<text  x="1180.43" y="223.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (251 samples, 0.04%)</title><rect x="858.6" y="197" width="0.5" height="15.0" fill="rgb(216,125,16)" rx="2" ry="2" />
<text  x="861.62" y="207.5" ></text>
</g>
<g >
<title>do_pairs (82 samples, 0.01%)</title><rect x="857.4" y="197" width="0.2" height="15.0" fill="rgb(217,51,53)" rx="2" ry="2" />
<text  x="860.43" y="207.5" ></text>
</g>
<g >
<title>error_entry (65 samples, 0.01%)</title><rect x="772.5" y="197" width="0.1" height="15.0" fill="rgb(254,9,49)" rx="2" ry="2" />
<text  x="775.52" y="207.5" ></text>
</g>
<g >
<title>handle_edge_irq (96 samples, 0.01%)</title><rect x="768.3" y="149" width="0.2" height="15.0" fill="rgb(242,73,41)" rx="2" ry="2" />
<text  x="771.34" y="159.5" ></text>
</g>
<g >
<title>__acosf_finite (357 samples, 0.05%)</title><rect x="887.7" y="261" width="0.6" height="15.0" fill="rgb(223,77,17)" rx="2" ry="2" />
<text  x="890.70" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (125 samples, 0.02%)</title><rect x="776.7" y="213" width="0.3" height="15.0" fill="rgb(207,7,2)" rx="2" ry="2" />
<text  x="779.74" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (711 samples, 0.11%)</title><rect x="775.4" y="181" width="1.2" height="15.0" fill="rgb(239,213,5)" rx="2" ry="2" />
<text  x="778.40" y="191.5" ></text>
</g>
<g >
<title>Nbnxm::sort_atoms (4,728 samples, 0.70%)</title><rect x="25.0" y="261" width="8.3" height="15.0" fill="rgb(214,27,6)" rx="2" ry="2" />
<text  x="27.97" y="271.5" ></text>
</g>
<g >
<title>do_dih_fup&lt; (66 samples, 0.01%)</title><rect x="897.4" y="261" width="0.2" height="15.0" fill="rgb(246,102,42)" rx="2" ry="2" />
<text  x="900.45" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nbnxn_cj_t, std::allocator&lt;nbnxn_cj_t&gt; &gt;::_M_default_append (147 samples, 0.02%)</title><rect x="853.7" y="197" width="0.3" height="15.0" fill="rgb(222,69,16)" rx="2" ry="2" />
<text  x="856.70" y="207.5" ></text>
</g>
<g >
<title>handle_irq_event (92 samples, 0.01%)</title><rect x="768.3" y="133" width="0.2" height="15.0" fill="rgb(225,114,40)" rx="2" ry="2" />
<text  x="771.35" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (815 samples, 0.12%)</title><rect x="770.4" y="101" width="1.4" height="15.0" fill="rgb(220,117,14)" rx="2" ry="2" />
<text  x="773.38" y="111.5" ></text>
</g>
<g >
<title>perf_event_task_tick (64 samples, 0.01%)</title><rect x="1178.5" y="85" width="0.1" height="15.0" fill="rgb(243,77,45)" rx="2" ry="2" />
<text  x="1181.48" y="95.5" ></text>
</g>
<g >
<title>rebalanceSimpleLists (4,672 samples, 0.69%)</title><rect x="879.4" y="245" width="8.2" height="15.0" fill="rgb(245,161,43)" rx="2" ry="2" />
<text  x="882.39" y="255.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (99 samples, 0.01%)</title><rect x="888.5" y="229" width="0.2" height="15.0" fill="rgb(218,174,17)" rx="2" ry="2" />
<text  x="891.54" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (618 samples, 0.09%)</title><rect x="1178.1" y="181" width="1.0" height="15.0" fill="rgb(254,85,6)" rx="2" ry="2" />
<text  x="1181.05" y="191.5" ></text>
</g>
<g >
<title>gmx::LegacySimulator::do_steep (846 samples, 0.13%)</title><rect x="865.4" y="165" width="1.4" height="15.0" fill="rgb(254,55,5)" rx="2" ry="2" />
<text  x="868.36" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (81 samples, 0.01%)</title><rect x="775.0" y="197" width="0.1" height="15.0" fill="rgb(221,102,11)" rx="2" ry="2" />
<text  x="778.00" y="207.5" ></text>
</g>
<g >
<title>[unknown] (487,886 samples, 72.40%)</title><rect x="33.3" y="261" width="854.3" height="15.0" fill="rgb(242,108,30)" rx="2" ry="2" />
<text  x="36.27" y="271.5" >[unknown]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (60 samples, 0.01%)</title><rect x="33.1" y="245" width="0.1" height="15.0" fill="rgb(217,37,54)" rx="2" ry="2" />
<text  x="36.14" y="255.5" ></text>
</g>
<g >
<title>vfs_write (135 samples, 0.02%)</title><rect x="860.1" y="181" width="0.2" height="15.0" fill="rgb(254,102,49)" rx="2" ry="2" />
<text  x="863.11" y="191.5" ></text>
</g>
<g >
<title>get_f_norm_max (409 samples, 0.06%)</title><rect x="864.6" y="245" width="0.7" height="15.0" fill="rgb(206,221,33)" rx="2" ry="2" />
<text  x="867.63" y="255.5" ></text>
</g>
<g >
<title>pbc_dx_aiuc (194 samples, 0.03%)</title><rect x="779.0" y="213" width="0.4" height="15.0" fill="rgb(243,56,34)" rx="2" ry="2" />
<text  x="782.05" y="223.5" ></text>
</g>
<g >
<title>schedule (58 samples, 0.01%)</title><rect x="1179.2" y="181" width="0.1" height="15.0" fill="rgb(245,197,35)" rx="2" ry="2" />
<text  x="1182.23" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (82 samples, 0.01%)</title><rect x="768.5" y="149" width="0.2" height="15.0" fill="rgb(211,185,25)" rx="2" ry="2" />
<text  x="771.53" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (449 samples, 0.07%)</title><rect x="1178.2" y="149" width="0.8" height="15.0" fill="rgb(236,24,26)" rx="2" ry="2" />
<text  x="1181.20" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (871 samples, 0.13%)</title><rect x="770.3" y="117" width="1.5" height="15.0" fill="rgb(223,7,11)" rx="2" ry="2" />
<text  x="773.28" y="127.5" ></text>
</g>
<g >
<title>schedule (161 samples, 0.02%)</title><rect x="768.9" y="149" width="0.3" height="15.0" fill="rgb(209,199,33)" rx="2" ry="2" />
<text  x="771.93" y="159.5" ></text>
</g>
<g >
<title>PairlistSet::constructPairlists (271,992 samples, 40.36%)</title><rect x="298.3" y="229" width="476.3" height="15.0" fill="rgb(210,94,40)" rx="2" ry="2" />
<text  x="301.27" y="239.5" >PairlistSet::constructPairlists</text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (117 samples, 0.02%)</title><rect x="772.3" y="197" width="0.2" height="15.0" fill="rgb(234,42,45)" rx="2" ry="2" />
<text  x="775.31" y="207.5" ></text>
</g>
<g >
<title>__atanf (534 samples, 0.08%)</title><rect x="860.6" y="245" width="1.0" height="15.0" fill="rgb(250,143,29)" rx="2" ry="2" />
<text  x="863.62" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,724 samples, 0.26%)</title><rect x="769.2" y="181" width="3.0" height="15.0" fill="rgb(243,101,26)" rx="2" ry="2" />
<text  x="772.21" y="191.5" ></text>
</g>
<g >
<title>update_process_times (85 samples, 0.01%)</title><rect x="853.4" y="69" width="0.2" height="15.0" fill="rgb(225,80,0)" rx="2" ry="2" />
<text  x="856.44" y="79.5" ></text>
</g>
<g >
<title>dih_angle (469 samples, 0.07%)</title><rect x="862.3" y="245" width="0.8" height="15.0" fill="rgb(209,43,41)" rx="2" ry="2" />
<text  x="865.28" y="255.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (62 samples, 0.01%)</title><rect x="768.6" y="133" width="0.1" height="15.0" fill="rgb(232,75,36)" rx="2" ry="2" />
<text  x="771.56" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,347 samples, 0.20%)</title><rect x="769.8" y="149" width="2.3" height="15.0" fill="rgb(206,86,41)" rx="2" ry="2" />
<text  x="772.78" y="159.5" ></text>
</g>
<g >
<title>nbnxn_make_pairlist_part&lt;NbnxnPairlistCpu&gt; (270,887 samples, 40.20%)</title><rect x="298.3" y="213" width="474.3" height="15.0" fill="rgb(206,143,8)" rx="2" ry="2" />
<text  x="301.30" y="223.5" >nbnxn_make_pairlist_part&lt;NbnxnPairlistCpu&gt;</text>
</g>
<g >
<title>ksys_write (139 samples, 0.02%)</title><rect x="860.1" y="197" width="0.2" height="15.0" fill="rgb(216,160,21)" rx="2" ry="2" />
<text  x="863.11" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (143 samples, 0.02%)</title><rect x="860.1" y="213" width="0.3" height="15.0" fill="rgb(206,67,47)" rx="2" ry="2" />
<text  x="863.10" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (143 samples, 0.02%)</title><rect x="860.1" y="229" width="0.3" height="15.0" fill="rgb(248,40,32)" rx="2" ry="2" />
<text  x="863.10" y="239.5" ></text>
</g>
<g >
<title>__atan2f_finite (106 samples, 0.02%)</title><rect x="860.4" y="245" width="0.2" height="15.0" fill="rgb(224,73,45)" rx="2" ry="2" />
<text  x="863.44" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nbnxn_cj_t, std::allocator&lt;nbnxn_cj_t&gt; &gt;::_M_default_append (1,077 samples, 0.16%)</title><rect x="772.6" y="213" width="1.9" height="15.0" fill="rgb(224,61,1)" rx="2" ry="2" />
<text  x="775.65" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (297 samples, 0.04%)</title><rect x="769.2" y="165" width="0.5" height="15.0" fill="rgb(235,162,14)" rx="2" ry="2" />
<text  x="772.21" y="175.5" ></text>
</g>
<g >
<title>schedule (67 samples, 0.01%)</title><rect x="775.0" y="181" width="0.1" height="15.0" fill="rgb(226,199,44)" rx="2" ry="2" />
<text  x="778.03" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (83 samples, 0.01%)</title><rect x="1178.8" y="69" width="0.1" height="15.0" fill="rgb(231,194,26)" rx="2" ry="2" />
<text  x="1181.80" y="79.5" ></text>
</g>
<g >
<title>__common_interrupt (68 samples, 0.01%)</title><rect x="1177.4" y="197" width="0.1" height="15.0" fill="rgb(225,78,7)" rx="2" ry="2" />
<text  x="1180.43" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,391 samples, 0.21%)</title><rect x="769.7" y="165" width="2.5" height="15.0" fill="rgb(223,16,45)" rx="2" ry="2" />
<text  x="772.73" y="175.5" ></text>
</g>
<g >
<title>Nbnxm::Grid::setCellIndices (551 samples, 0.08%)</title><rect x="33.7" y="229" width="1.0" height="15.0" fill="rgb(208,65,17)" rx="2" ry="2" />
<text  x="36.71" y="239.5" ></text>
</g>
<g >
<title>schedule (105 samples, 0.02%)</title><rect x="772.3" y="149" width="0.2" height="15.0" fill="rgb(228,51,3)" rx="2" ry="2" />
<text  x="775.33" y="159.5" ></text>
</g>
<g >
<title>Nbnxm::sort_atoms (101 samples, 0.01%)</title><rect x="34.7" y="245" width="0.1" height="15.0" fill="rgb(246,60,19)" rx="2" ry="2" />
<text  x="37.67" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (69 samples, 0.01%)</title><rect x="853.5" y="53" width="0.1" height="15.0" fill="rgb(251,93,19)" rx="2" ry="2" />
<text  x="856.46" y="63.5" ></text>
</g>
<g >
<title>common_interrupt (85 samples, 0.01%)</title><rect x="774.7" y="213" width="0.2" height="15.0" fill="rgb(243,98,19)" rx="2" ry="2" />
<text  x="777.73" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (129 samples, 0.02%)</title><rect x="775.1" y="197" width="0.3" height="15.0" fill="rgb(245,69,52)" rx="2" ry="2" />
<text  x="778.15" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,150 samples, 0.17%)</title><rect x="769.8" y="133" width="2.0" height="15.0" fill="rgb(233,131,35)" rx="2" ry="2" />
<text  x="772.82" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (393 samples, 0.06%)</title><rect x="771.0" y="53" width="0.7" height="15.0" fill="rgb(237,135,0)" rx="2" ry="2" />
<text  x="774.03" y="63.5" ></text>
</g>
<g >
<title>gmx::CommandLineModuleManager::run (859 samples, 0.13%)</title><rect x="865.3" y="213" width="1.5" height="15.0" fill="rgb(239,215,5)" rx="2" ry="2" />
<text  x="868.34" y="223.5" ></text>
</g>
<g >
<title>update_curr (74 samples, 0.01%)</title><rect x="776.2" y="69" width="0.1" height="15.0" fill="rgb(230,146,20)" rx="2" ry="2" />
<text  x="779.20" y="79.5" ></text>
</g>
<g >
<title>nbnxn_atomdata_set (761 samples, 0.11%)</title><rect x="865.4" y="133" width="1.4" height="15.0" fill="rgb(248,181,38)" rx="2" ry="2" />
<text  x="868.44" y="143.5" ></text>
</g>
<g >
<title>[libgomp.so.1.0.0] (1,953 samples, 0.29%)</title><rect x="854.0" y="213" width="3.4" height="15.0" fill="rgb(206,1,0)" rx="2" ry="2" />
<text  x="856.96" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_write (145 samples, 0.02%)</title><rect x="860.1" y="245" width="0.3" height="15.0" fill="rgb(206,178,4)" rx="2" ry="2" />
<text  x="863.10" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (619 samples, 0.09%)</title><rect x="770.7" y="69" width="1.1" height="15.0" fill="rgb(249,8,23)" rx="2" ry="2" />
<text  x="773.69" y="79.5" ></text>
</g>
<g >
<title>gmx::Constraints::Impl::apply (1,484 samples, 0.22%)</title><rect x="782.7" y="229" width="2.6" height="15.0" fill="rgb(242,135,23)" rx="2" ry="2" />
<text  x="785.71" y="239.5" ></text>
</g>
<g >
<title>gmx::csettle (1,464 samples, 0.22%)</title><rect x="782.7" y="213" width="2.6" height="15.0" fill="rgb(222,31,7)" rx="2" ry="2" />
<text  x="785.72" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (628 samples, 0.09%)</title><rect x="775.4" y="165" width="1.1" height="15.0" fill="rgb(233,103,10)" rx="2" ry="2" />
<text  x="778.42" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (733 samples, 0.11%)</title><rect x="775.4" y="197" width="1.3" height="15.0" fill="rgb(237,92,45)" rx="2" ry="2" />
<text  x="778.38" y="207.5" ></text>
</g>
<g >
<title>update_curr (141 samples, 0.02%)</title><rect x="771.2" y="37" width="0.3" height="15.0" fill="rgb(207,95,9)" rx="2" ry="2" />
<text  x="774.23" y="47.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (788 samples, 0.12%)</title><rect x="1177.8" y="213" width="1.4" height="15.0" fill="rgb(214,88,47)" rx="2" ry="2" />
<text  x="1180.79" y="223.5" ></text>
</g>
<g >
<title>bond_angle (377 samples, 0.06%)</title><rect x="861.6" y="245" width="0.6" height="15.0" fill="rgb(220,3,1)" rx="2" ry="2" />
<text  x="864.58" y="255.5" ></text>
</g>
<g >
<title>all (673,867 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(248,12,41)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>Nbnxm::Grid::calcColumnIndices (1,046 samples, 0.16%)</title><rect x="12.5" y="261" width="1.8" height="15.0" fill="rgb(219,66,37)" rx="2" ry="2" />
<text  x="15.51" y="271.5" ></text>
</g>
<g >
<title>update_process_times (428 samples, 0.06%)</title><rect x="775.7" y="117" width="0.8" height="15.0" fill="rgb(235,46,46)" rx="2" ry="2" />
<text  x="778.75" y="127.5" ></text>
</g>
<g >
<title>ttwu_do_activate (98 samples, 0.01%)</title><rect x="770.1" y="85" width="0.2" height="15.0" fill="rgb(240,152,50)" rx="2" ry="2" />
<text  x="773.08" y="95.5" ></text>
</g>
<g >
<title>do_em_step (169 samples, 0.03%)</title><rect x="859.1" y="197" width="0.3" height="15.0" fill="rgb(232,82,12)" rx="2" ry="2" />
<text  x="862.05" y="207.5" ></text>
</g>
<g >
<title>__fprintf_chk (248 samples, 0.04%)</title><rect x="888.3" y="261" width="0.5" height="15.0" fill="rgb(252,35,2)" rx="2" ry="2" />
<text  x="891.32" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (76 samples, 0.01%)</title><rect x="774.6" y="229" width="0.1" height="15.0" fill="rgb(240,143,14)" rx="2" ry="2" />
<text  x="777.58" y="239.5" ></text>
</g>
<g >
<title>gmx::LegacySimulator::run (854 samples, 0.13%)</title><rect x="865.3" y="181" width="1.5" height="15.0" fill="rgb(249,150,34)" rx="2" ry="2" />
<text  x="868.35" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (67 samples, 0.01%)</title><rect x="1179.2" y="229" width="0.1" height="15.0" fill="rgb(243,0,17)" rx="2" ry="2" />
<text  x="1182.21" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (110 samples, 0.02%)</title><rect x="772.3" y="165" width="0.2" height="15.0" fill="rgb(246,200,10)" rx="2" ry="2" />
<text  x="775.32" y="175.5" ></text>
</g>
<g >
<title>update_process_times (803 samples, 0.12%)</title><rect x="770.4" y="85" width="1.4" height="15.0" fill="rgb(210,93,6)" rx="2" ry="2" />
<text  x="773.40" y="95.5" ></text>
</g>
<g >
<title>evaluate_single (610 samples, 0.09%)</title><rect x="778.0" y="213" width="1.0" height="15.0" fill="rgb(242,195,32)" rx="2" ry="2" />
<text  x="780.98" y="223.5" ></text>
</g>
<g >
<title>do_force (790 samples, 0.12%)</title><rect x="865.4" y="149" width="1.4" height="15.0" fill="rgb(250,229,25)" rx="2" ry="2" />
<text  x="868.39" y="159.5" ></text>
</g>
<g >
<title>calcBondedForces (211 samples, 0.03%)</title><rect x="857.4" y="213" width="0.4" height="15.0" fill="rgb(222,160,3)" rx="2" ry="2" />
<text  x="860.41" y="223.5" ></text>
</g>
<g >
<title>nbnxn_atomdata_add_nbat_f_to_f_stdreduce (177 samples, 0.03%)</title><rect x="858.3" y="213" width="0.3" height="15.0" fill="rgb(228,151,7)" rx="2" ry="2" />
<text  x="861.30" y="223.5" ></text>
</g>
<g >
<title>gen8_de_irq_handler.isra.0 (63 samples, 0.01%)</title><rect x="768.4" y="85" width="0.1" height="15.0" fill="rgb(239,136,13)" rx="2" ry="2" />
<text  x="771.37" y="95.5" ></text>
</g>
<g >
<title>schedule (118 samples, 0.02%)</title><rect x="776.7" y="181" width="0.3" height="15.0" fill="rgb(222,105,50)" rx="2" ry="2" />
<text  x="779.75" y="191.5" ></text>
</g>
</g>
</svg>
